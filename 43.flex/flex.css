/* FlexBox */
/* "Model layout 1 dimensi yang dapat mengatur jarak dan penjajaran antar item dalam sebuah container" */

/* 1 Dimensi */
/* "Hanya dapat mengatur 1 dimensi pada saat tertentu, antara baris atau kolom, tidak bisa keduanya sekaligus" */

/* 2 Dimensi */
/* "Gunakan CSS Grid" */

/* Flexbox Layout Module */
/* "Sebuah modul yang menwarkan cara yang efektif untuk menyusun, mensejajarkan dan mendistribusikan jarak antar item di dalam sebuah container, meskipun ukurannya dinamis atau bahkan kita tidak tau" */

/* main axis */
/* Elemen sejajar secara horizontal */
/* Sumbu utama dari sebuah container yang menentukan urutan dari penempatan items secara horizontal */

/* cross axis */
/* Elemen sejajar secara vertikal */

/* main size */
/* Ukuran container */
/* Ukuran (width / height) dari container yang akan membuat dimensi dari items nya relatif terhadap main size */

/* cross  size */
/* Ukuran kolom */

/* main start | main end */
/* Secara horizontal */
/* Mulai dan berakhirnya items disimpan di dalam container */

/* cross start | cross end */
/* Secara vertikal */


/* Properti pada container */
/* display */

/* .container {
        display: flex;
    }
*/
/* Membuat sebuah elemen parernt menjadi flex box, dan membuat elemen-elemen di dalamnya bisa berprilaku flex juga. */


/* flex direction */
/* .container {
        flex-direction: row | row-reverse | column | column-reverse;
    }
*/
/* Mengatur arah atau urutan dari items di dalam container */

/* flex-wrap */
/* .container {
        flex-wrap: nowrap | wrap | wrap-reverse;
    }
*/
/* Secara default, semua items di dalam container akan berada pada satu baris meskipun ukurannya sudah tidak cukup, wrap memungkinkan untuk memindahkan items ke baris di bawahnya */

/* justify-content */
/* flex-star | dari kiri */
/* flex-end | dari kanan */
/* center | ditengah */
/* space-between | kiri - tengah - kanan nempel */
/* space-around | kiri - tengah - kanan ada jarak sama = 5 55 55 5 */
/* space-evenly | kiri - tengah - kanan ada jarak sama = 5 5 5 5*/
/* .container {
        justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly;
    }
*/
/* Mengatur jarak antar items */

/* Align items */
/* flex-star */
/* flex-end */
/* center */
/* stretch */
/* baseline */
/* .container {
        align-items: flex-start | flex-end | center | stretch | baseline;
    }
*/
/* Mengatur perilaku penjajaran items terhadap cross axis */

/* align-content */
/* flex-start */
/* flex-end */
/* center */
/* stretch */
/* space-between */
/* space-around */
/* .container {
        align-content: flex-start | flex-end | center | space-between | space-around;
    }
*/
/* Mengatur jarak items terhadap cross axis */

/* Order */
/* Mengatur posisi items */
/* 
    .satu {
        order: 3;
    }
    .dua {
        order: 4;
    }
    .tiga {
        order: 2;
    }
    .empat {
        order: 1;
    }
*/

/* align-self */
/* flex-star */
/* flex-end */
/* stretch */
/* .item {
        align-self: auto | flex-star | flex-end | center | stretch | baseline
    }
*/
/* Mengatur perilaku penjajaran sebuah item yang spesifik terhadap cross axis */


.container {
    max-width: 600px;
    height: 150px;
    border: 5px solid black;
    margin: 30px auto;
    padding: 5px;
    box-sizing: border-box;
    display: flex;
    /* flex-direction: row-reverse; */
    /* flex-wrap: wrap */
    /* justify-content: space-between; */
    /* justify-content: center; */
    /* align-items: flex-start; */
}

.container div {
    color: white;
    background-color: red;
    margin: 2px;
    flex: 1;
}

/* .container div.tiga {
    font-size: 60px;
}
.container div.empat {
    font-size: 100px;
} */

.satu {
    order: 3;
}
.container div.dua {
    order: 4;
    flex: 3;
    align-self: center;
}
.tiga {
    order: 2;
}
.empat {
    order: 1;
}